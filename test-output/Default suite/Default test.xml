<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Ameet" failures="0" tests="21" name="Default test" time="2.454" errors="0" timestamp="2024-08-27T18:58:44 IST">
  <testcase classname="testcases.doctor_testcase" name="@BeforeClass initBrowser" time="-1.7247653197E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method initBrowser but has not been marked @Optional or defined
in C:\Users\Ameet Khemani\AppData\Local\Temp\testng-eclipse--1928048893\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method initBrowser but has not been marked @Optional or defined
in C:\Users\Ameet Khemani\AppData\Local\Temp\testng-eclipse--1928048893\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:306)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:180)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass initBrowser -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterMethod retryIfTestFails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod retryIfTestFails -->
  <testcase classname="testcases.doctor_testcase" name="@AfterClass tearDown" time="0.026">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;org.openqa.selenium.WebDriver.quit()&amp;quot; because &amp;quot;this.driver&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at coreUtilities.testbase.TestBase.browserTearDown(TestBase.java:103)
at testcases.doctor_testcase.tearDown(doctor_testcase.java:342)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestMethodWorker.invokeAfterClassConfigurations(TestMethodWorker.java:229)
at org.testng.internal.invokers.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:215)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:131)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="testcases.doctor_testcase" name="verifyTitleOfTheHomePage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTitleOfTheHomePage -->
  <testcase classname="testcases.doctor_testcase" name="verifyAllSubModulesArePresent" time="0.0">
    <skipped/>
  </testcase> <!-- verifyAllSubModulesArePresent -->
  <testcase classname="testcases.doctor_testcase" name="validateTheCheckBox" time="0.001">
    <skipped/>
  </testcase> <!-- validateTheCheckBox -->
  <testcase classname="testcases.doctor_testcase" name="selectNEUROSURGERYFromDepartmentDropdownAndVerifySelection" time="0.0">
    <skipped/>
  </testcase> <!-- selectNEUROSURGERYFromDepartmentDropdownAndVerifySelection -->
  <testcase classname="testcases.doctor_testcase" name="verifyTheButtonsArePresentOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheButtonsArePresentOrNot -->
  <testcase classname="testcases.doctor_testcase" name="verifyTitleOfTheForm" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTitleOfTheForm -->
  <testcase classname="testcases.doctor_testcase" name="verifyTheName" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheName -->
  <testcase classname="testcases.doctor_testcase" name="verifyTheErrorMessage" time="0.001">
    <skipped/>
  </testcase> <!-- verifyTheErrorMessage -->
  <testcase classname="testcases.doctor_testcase" name="performScrollingOpertaionAndVerifyThePresenceOfButton" time="0.002">
    <skipped/>
  </testcase> <!-- performScrollingOpertaionAndVerifyThePresenceOfButton -->
  <testcase classname="testcases.doctor_testcase" name="highlightElement" time="0.0">
    <skipped/>
  </testcase> <!-- highlightElement -->
  <testcase classname="testcases.doctor_testcase" name="verifyThePlaceHolderName" time="0.0">
    <skipped/>
  </testcase> <!-- verifyThePlaceHolderName -->
  <testcase classname="testcases.doctor_testcase" name="validateTheEnteredValue" time="0.0">
    <skipped/>
  </testcase> <!-- validateTheEnteredValue -->
  <testcase classname="testcases.doctor_testcase" name="verifyTheRadioButton" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheRadioButton -->
  <testcase classname="testcases.doctor_testcase" name="performJavaScriptOperations" time="0.0">
    <skipped/>
  </testcase> <!-- performJavaScriptOperations -->
  <testcase classname="testcases.doctor_testcase" name="verifyTheNotificationPopupErrorMessage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheNotificationPopupErrorMessage -->
  <testcase classname="testcases.doctor_testcase" name="uploadImageInScannedImagesSection" time="0.0">
    <skipped/>
  </testcase> <!-- uploadImageInScannedImagesSection -->
  <testcase classname="testcases.doctor_testcase" name="takingScreenshotOfCurrentPage" time="0.0">
    <skipped/>
  </testcase> <!-- takingScreenshotOfCurrentPage -->
  <testcase classname="testcases.doctor_testcase" name="performKeyboardOperation" time="0.0">
    <skipped/>
  </testcase> <!-- performKeyboardOperation -->
  <testcase classname="testcases.doctor_testcase" name="verifyTooltipOfAnElement" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTooltipOfAnElement -->
  <testcase classname="testcases.doctor_testcase" name="handleAlertPopup" time="0.0">
    <skipped/>
  </testcase> <!-- handleAlertPopup -->
  <testcase classname="testcases.doctor_testcase" name="handleAutoSuggesstion" time="0.001">
    <skipped/>
  </testcase> <!-- handleAutoSuggesstion -->
</testsuite> <!-- Default test -->
